#ifndef HEADER_8427D66EED644D3B9EE1A77C3A077053 // -*- mode:c++ -*-
#define HEADER_8427D66EED644D3B9EE1A77C3A077053

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

template <class T>
struct EnumBaseType;

template <class T>
struct EnumTraits;

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

// These don't do anything special - they just serve as a kind of markup for
// serialization.
//
// TODO: overloaded operators and all that - maybe.

template <class T>
struct Enum {
    typedef T ValueType;
    ValueType value{};
};

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

template <class T>
struct EnumFlags {
    typedef typename EnumTraits<T>::BaseType ValueType;
    ValueType value{};
};

//////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

#endif
