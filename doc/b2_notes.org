#+STARTUP: overview

* Tube registers

| Host Addr | Read              | R Note | Write           | W Note |
|-----------+-------------------+--------+-----------------+--------|
| fee0      | A1 F1 P V M J I Q |        | S T P V M K I Q |        |
| fee1      | FIFO 1 p2h data   |        | FIFO 1 h2p data | 6      |
| fee2      | A2 F2 1 1 1 1 1 1 |        | -               |        |
| fee3      | FIFO 2 p2h data   |        | FIFO 2 h2p data |        |
| fee4      | A3 F3 1 1 1 1 1 1 |        | -               |        |
| fee5      | FIFO 3 p2h data   | 2      | FIFO 3 h2p data | 7      |
| fee6      | A4 F4 1 1 1 1 1 1 |        | -               |        |
| fee7      | FIFO 4 p2h data   | 4      | FIFO 4 h2p data | 9      |

| Par Addr | Read              | R Note | Write          | W Note |
|----------+-------------------+--------+----------------+--------|
| fef8     | A1 F1 P V M J I Q | 1      | -              |        |
| fef9     | FIFO1 h2p data    |        | FIFO1 p2h data |        |
| fefa     | A2 F2 1 1 1 1 1 1 |        | -              |        |
| fefb     | FIFO2 h2p data    |        | FIFO2 p2h data |        |
| fefc     | A3 F3 1 1 1 1 1 1 |        | -              |        |
| fefd     | FIFO3 h2p data    |  3     | FIFO3 p2h data |        |
| fefe     | A4 F4 1 1 1 1 1 1 |        | -              |        |
| feff     | FIFO4 h2p data    |  5     | FIFO4 p2h data |  10    |

HIRQ: Q=1, R4 p2h data available

PIRQ: I=1, R1 h2p data available
      J=1, R4 h2p data available

These two cases must be tracked independently, as the two status can
be reset independently.

PNMI: M=1, V=0, 1+ byte in R3 h2p
      M=1, V=1, 2 bytes in R3 h2p
      M=1, 0 bytes in R3 p2h

** TODO 1. Will clear PIRQ if register 1 was the source
** TODO 2. May activate PNMI depending on M and V flags
** TODO 3. May clear PNMI (see description of interrupt operation)
** TODO 4. Will clear HIRQ if it was active
** TODO 5. Will clear PIRQ if register 4 was the source
** TODO 6. Will activate PIRQ if I = 1
** TODO 7. May activate PNMI depending on M and V flags
** TODO 8. May clear PNMI
** TODO 9. Will activate PIRQ is J = 1
** TODO 10. Will activate HIRQ if Q = 1
* ADC registers

| nCS | nRD | nWR | (Access) | A1 | A0 | (Addr) | Mode         | Internal Function | Data I/O terminals     |
|-----+-----+-----+----------+----+----+--------+--------------+-------------------+------------------------|
|   1 |   - |   - | -        |  - |  - |        | Not selected |                   | High impedance         |
|   0 |   1 |   1 | -        |  - |  - |        | Not selected |                   | High impedance         |
|-----+-----+-----+----------+----+----+--------+--------------+-------------------+------------------------|
|   0 |   1 |   0 | write    |  0 |  0 |      0 | Write mode   | A/D start         | Input status           |
|     |     |     |          |    |    |        |              |                   | D1;D0 = MPX address    |
|     |     |     |          |    |    |        |              |                   | D2 = flag              |
|     |     |     |          |    |    |        |              |                   | D3 = 10-bit I/O if set |
|-----+-----+-----+----------+----+----+--------+--------------+-------------------+------------------------|
|   0 |   1 |   0 | write    |  0 |  1 |      1 | Not selected |                   | High impedance         |
|   0 |   1 |   0 | write    |  1 |  0 |      2 | Not selected |                   | High impedance         |
|-----+-----+-----+----------+----+----+--------+--------------+-------------------+------------------------|
|   0 |   1 |   0 | write    |  1 |  1 |      3 | Test mode    | Test status       |                        |
|-----+-----+-----+----------+----+----+--------+--------------+-------------------+------------------------|
|   0 |   0 |   1 | read     |  0 |  0 |      0 | Read mode    | Internal status   | D1;D0 = MPX            |
|     |     |     |          |    |    |        |              |                   | D2 = flag              |
|     |     |     |          |    |    |        |              |                   | D3 = 8/10              |
|     |     |     |          |    |    |        |              |                   | D5;D4 = MSBs           |
|     |     |     |          |    |    |        |              |                   | D6 = BUSY              |
|     |     |     |          |    |    |        |              |                   | D7 = ~EOC              |
|-----+-----+-----+----------+----+----+--------+--------------+-------------------+------------------------|
|   0 |   0 |   1 | read     |  0 |  1 |      1 | Read mode    | High data byte    |                        |
|-----+-----+-----+----------+----+----+--------+--------------+-------------------+------------------------|
|   0 |   0 |   1 | read     |  1 |  0 |      2 | Read mode    | Low data byte     |                        |
|   0 |   0 |   1 | read     |  1 |  1 |      3 | Read mode    | Low data byte     |                        |
|-----+-----+-----+----------+----+----+--------+--------------+-------------------+------------------------|

* BeebThreadTimelineState

#+begin_src c++
  struct BeebThreadTimelineState {
      BeebThreadTimelineMode mode;  // y = ts.timeline_mode
      CycleCount begin_cycles;      // y } cycle range for event list...
      CycleCount end_cycles;        // y } ...see BeebThread::ThreadMain
      CycleCount current_cycles;    // = ts.num_executed_cycles
      size_t num_events;            // y needs tracking...
      size_t num_beeb_state_events; // y = ts.timeline_event_lists.size()
      bool can_record;              // y mode-dependent; see BeebThread::ThreadMain
      uint32_t clone_impediments;   // y see BeebThread::ThreadMain
  };
#+end_src

* Dock Fix Fallout

** DONE LEDs popup
CLOSED: [2023-12-19 Tue 23:58]
** DONE Messages popup
CLOSED: [2023-12-19 Tue 23:59]
** DONE ~ImGuiConsumePressedKeycode~
CLOSED: [2024-01-06 Sat 17:47]
** DONE Demo window
CLOSED: [2023-12-20 Wed 00:01]
** DONE Stored drawlists window
CLOSED: [2023-12-20 Wed 00:01]
** DONE Metrics window
CLOSED: [2023-12-20 Wed 00:01]
** DONE Beeb display size+borders
CLOSED: [2023-12-19 Tue 18:23]
** DONE Glitch when toggling texture filtering
CLOSED: [2023-12-19 Tue 19:28]

* test_AVFoundation

Convert video to .jpg files:

: ffmpeg -i "../IMG_1145.MOV" -q:v 2 %06d.jpg

Convert video to .wav file:

: ffmpeg -i "../IMG_1145.MOV" -f wav -vn test.wav

Command line options for test_AVFoundation:

#+begin_example
  --verbose -o /tmp/xyz.mov /Users/tom/tmp/video_test/frames
#+end_example

* Submodule notes

Where a submodule tracks a GitHub repo that's a fork, GitHub mostly
tracks the right source of the fork. Use the URL of the forked repo
(as shown on its GitHub repo page) as the ~upstream~ remote.

Because of the way submodules work, it's basically impossible to
remove one once it's been added, in case some historical revision
still uses it. So not all of them are actually used by the head
revision, but... hopefully... if you were to check out every single
revision of the repo, you'd find that every one was used at at least
one point.

Other submodule-specific notes:

** ~imgui~

This is a fork of the upstream repo, docking branch.

(For a long while it did track somebody else's fork
(https://github.com/Flix01/imgui/), which included some docking UI
functionality, but this appears to have been abandoned.

** ~SDL~

Unused submodule.

Fork of old mirror of SDL, plus a patch for rendering API-agnostic
triangle drawing. See https://github.com/libsdl-org/SDL/issues/772

SDL then moved to GitHub, and its official repo turned out not to be
mergeable with this one.

** ~SDL_official~ (https://github.com/tom-seddon/SDL-1)

Fork of the official SDL repo.

* Turbo disc (RIP)

After 1770 sets DRQ, wait for CPU to read/write data register. Once
read/written, wait for CPU to execute next RTI. Then go to the next
byte straight away. Also: reduce settle and seek times. (Don't omit
the inter-sector delay, as Watford DDFS needs it.)

This involved a bunch of code in a bunch of places, and ended up a
special case, being a runtime toggle (that affected reproducibility)
rather than part of the BeebConfig. And I never tested it enough to
promote it.

It could return, but probably won't... there are better ways of
providing fast file access, that b2 should probably support instead -
BeebLink (etc.), B-em's VDFS (etc.), (if you want ADFS) some kind of
hard disc emulation, and so on.

* Debugger paging override syntax

When providing an address, by default the debugger accesses whichever
byte of memory is paged in at the time. If you access address 8003,
for example, you could get any one of 16 paged ROMs, or (on B+/Master)
some of the extra RAM, depending on the value of ROMSEL.

If you want to refer to a particular byte, unambiguously, you can use
the paging override syntax. This consists of a prefix, specifying
which bits of paged memory are paged in, then a ~.~, then the address.
For example, ~5.8003~, to refer to address 8003 in ROM bank 5.

The available prefixes are as follows:

- ~0~, ~1~, ~2~, ~3~, ~4~, ~5~, ~6~, ~7~, ~8~, ~9~, ~a~, ~b~, ~c~, ~d~, ~e~, ~f~,  - the given ROM bank
- ~n~ - ANDY (Master), extra 12K RAM (B+)
- ~m~, ~s~ - main RAM or shadow RAM
- ~h~ - HAZEL (Master)
- ~i~ - I/O area (only useful on Master)
- ~o~ - OS

prefix precedence? overlapping areas??

** B

| Address   | What                                                                         |
|-----------+------------------------------------------------------------------------------|
| 0000-7fff | always main RAM                                                              |
| 8000-bfff | current paged ROM as per ROMSEL, or ~0123456789abcdef~ for specific ROM bank |
| c000-fbff | always OS                                                                    |
| fc00-feff | I/O area, or ~o~ for OS (not terribly useful)                                |
| ff00-ffff | always OS                                                                    |

** B+

| Address   | What                                                                                                             |
|-----------+------------------------------------------------------------------------------------------------------------------|
| 0000-2fff | always main RAM                                                                                                  |
| 3000-7fff | shadow/main RAM as per bit 7 of ACCON, or ~m~ for main RAM, or ~s~ for shadow RAM                                |
| 8000-afff | current paged ROM/extra RAM as per ROMSEL, or ~0123456789abcdef~ for specific ROM bank, or ~n~ for 12K extra RAM |
| b000-bfff | current paged ROM as per ROMSEL, or ~0123456789abcdef~ for specific ROM bank                                     |
| c000-fbff | always OS                                                                                                        |
| fc00-feff | I/O area, or ~o~ for OS (not terribly useful)                                                                    |
| ff00-ffff | always OS                                                                                                        |

Notes:

- ~n~ is for aNdy, which is what the RAM at 8000 is called on the Master

** Master

| Address   | What                                                                                               |
|-----------+----------------------------------------------------------------------------------------------------|
| 0000-2fff | always main RAM                                                                                    |
| 3000-7fff | shadow/main RAM as per bit 2 of ACCCON, or ~m~ for main RAM, or ~s~ for shadow RAM                 |
| 8000-8fff | current paged ROM/ANDY as per ROMSEL, or ~0123456789abcdef~ for specific ROM bank, or ~n~ for ANDY |
| 9000-bfff | current paged ROM as per ROMSEL, or ~0123456789abcdef~ for specific ROM bank                       |
| c000-dfff | OS or HAZEL as per bit 3 of ACCCON, or ~o~ for OS, or ~h~ for HAZEL                                |
| e000-fbff | always OS                                                                                          |
| fc00-feff | OS or I/O area as per bit 6 of ACCCON, or ~i~ for I/O, or ~o~ for OS                               |
| ff00-ffff | always OS                                                                                          |

* agh

#+begin_example
1948227  m`$4438: dec $fe65 [i`$fe65]      A=01 X=04 Y=00 S=fd P=Nvdizc (D=fe)
1948227  read $ce from $4438
1948228  CPU state before: tfn=T0_All t0fn=T0_RMW_ABS
1948228  CPU state after: tfn=T1_RMW_ABS ifn=DEC, abus=$4439, dbus=$ce
1948228  read $65 from $4439
1948229  CPU state before: tfn=T1_RMW_ABS ifn=DEC
1948229  CPU state after: tfn=T2_RMW_ABS ifn=DEC, abus=$443a, dbus=$65
1948229  read $fe from $443a
1948229  UserVIA - T1 timeout
1948230  CPU state before: tfn=T2_RMW_ABS ifn=DEC
1948230  CPU state after: tfn=T3_RMW_ABS ifn=DEC, abus=$fe65, dbus=$fe
1948230  Stretch #1
1948230  UserVIA - T1 IRQ. Continuous=false PB7=false
1948231  read $ff from $fe65
1948231  UserVIA - T1 reload: T1=$0004 (4)
1948232  CPU state before: tfn=T3_RMW_ABS ifn=DEC
1948232  CPU state after: tfn=T4_RMW_ABS ifn=DEC, abus=$fe65, dbus=$ff
1948232  Stretch #1
1948233  write $ff to $fe65
1948233  UserVIA - T1C-H write acknowledges T1 (IFR=$00)
1948233  UserVIA - T1 reload: T1=$ff04 (65284)
1948234  CPU state before: tfn=T4_RMW_ABS ifn=DEC
1948234  CPU state after: tfn=T5_RMW_ABS ifn=DEC, abus=$fe65, dbus=$fe

1948234  Checked for interrupts <---- this should happen just before the previous write!

1948234  Stretch #1
1948235  write $fe to $fe65
1948235  UserVIA - T1C-H write acknowledges T1 (IFR=$00)
1948235  UserVIA - T1 reload: T1=$fe04 (65028)
1948236  CPU state before: tfn=T5_RMW_ABS ifn=DEC
1948236  CPU state after: tfn=T0_All t0fn=?, abus=$443b, dbus=$fe
1948236  m`$443b: lda $1001 [m`$1001]      A=00 X=04 Y=00 S=fd P=nvdiZc (D=00)
1948236  read $ad from $443b
#+end_example

* Emacs setup

~.dir-locals.el~:

#+begin_example
((nil . ((compile-command . "cd ~/b2/ && make tom_emacs"))))
#+end_example

* config versioning notes

Tag each default config with a feature name, a string

When saving: save off features seen in all configs

When loading: any default configs with an unseen feature are added to
the list. And the cycle repeats.

Configs predating the feature mechanism - i.e., the stock B/B+/M128
set - are marked by having an empty feature name., They never get
re-added.

* notes about why stuff is in one of ~BBCMicro~ or ~BeebThread~ rather than the other 

Saved states/rewind/timeline/etc. is supposed to be at heart managed
by copying ~BBCMicro~ objects. So anything that affects
reproducibility has to be part of that. Hence pasting state being in
~BBCMicro~.

But ~BBCMicro~ should also have no more functionality in it than
necessary, so which is why the trace stuff is just start/stop on the
BBCMicro class and then a pile of junk in BeebThread to handle the
various start and stop conditions.

Would be nice to get the instruction/write callbacks out of BBCMicro
too, since in theory the BeebThread could do that bit. But having them
there does mean they can be easily stripped out of the templated
Update functions via ~if constexpr~, meaning no overhead when not
updating.

Could maybe template the BeebThread update function, along similar
lines? The stretch flag complicates that a bit, though.

* Compact EEPROM stuff

f`$82d9: - print "Options reset"

bra resetCMOSRAM:

H     2475011  f`$8279: bra  $82bb               00 00 00 ff nvdIZc (01)

powerOnReset:

H     2463066  f`$8264: ldx  #$ff                00 ff 0f ff NvdIzc (ff)

#+begin_example
605	.8264					powerOnReset:
607	.8264	a2 ff		ldx #$ff	                ldx #$ff
608	.8266	20 3a 9f	jsr $9f3a	                jsr i2cReadEEPROMByte
609	.8269	b0 10		bcs $827b	                bcs checkForNVRAMReset

C=0, so branch not taken. Read succeeded, at least.

Y=$00

610	.826b	98		tya		                tya

A=$00

611	.826c	29 7f		and #$7f	                and #$7f

A=$00

615	.826e	c9 30		cmp #$30	                cmp #$30

Nope...

617	.8270	f0 09		beq $827b	                beq checkForNVRAMReset

It is done.

618	.8272	a2 00		ldx #$00	                ldx #0
619	.8274	a0 00		ldy #$00	                ldy #0
620	.8276	20 09 9f	jsr $9f09	                jsr L9E99
621	.8279	80 40		bra $82bb	                bra resetCMOSRAM
#+end_example

* Olivetti PC 128 S

Default CMOS:

#+begin_example
  [0]	0 '\0'	unsigned char
  [1]	254 'þ'	unsigned char
  [2]	0 '\0'	unsigned char
  [3]	235 'ë'	unsigned char
  [4]	0 '\0'	unsigned char
  [5]	237 'í'	unsigned char
  [6]	255 'ÿ'	unsigned char
  [7]	255 'ÿ'	unsigned char
  [8]	0 '\0'	unsigned char
  [9]	0 '\0'	unsigned char
  [10]	249 'ù'	unsigned char
  [11]	227 'ã'	unsigned char
  [12]	32 ' '	unsigned char
  [13]	8 '\b'	unsigned char
  [14]	10 '\n'	unsigned char
  [15]	44 ','	unsigned char
  [16]	128 '€'	unsigned char
  [17]	0 '\0'	unsigned char
  [18]	3 '\x3'	unsigned char
  [19]	4 '\x4'	unsigned char
  [20]	0 '\0'	unsigned char
  [21]	0 '\0'	unsigned char
  [22]	0 '\0'	unsigned char
  [23]	0 '\0'	unsigned char
  [24]	0 '\0'	unsigned char
  [25]	0 '\0'	unsigned char
  [26]	0 '\0'	unsigned char
  [27]	0 '\0'	unsigned char
  [28]	0 '\0'	unsigned char
  [29]	0 '\0'	unsigned char
  [30]	0 '\0'	unsigned char
  [31]	0 '\0'	unsigned char
  [32]	0 '\0'	unsigned char
  [33]	0 '\0'	unsigned char
  [34]	0 '\0'	unsigned char
  [35]	0 '\0'	unsigned char
  [36]	0 '\0'	unsigned char
  [37]	0 '\0'	unsigned char
  [38]	0 '\0'	unsigned char
  [39]	0 '\0'	unsigned char
  [40]	0 '\0'	unsigned char
  [41]	0 '\0'	unsigned char
  [42]	0 '\0'	unsigned char
  [43]	0 '\0'	unsigned char
  [44]	0 '\0'	unsigned char
  [45]	0 '\0'	unsigned char
  [46]	0 '\0'	unsigned char
  [47]	0 '\0'	unsigned char
  [48]	0 '\0'	unsigned char
  [49]	0 '\0'	unsigned char
  [50]	0 '\0'	unsigned char
  [51]	0 '\0'	unsigned char
  [52]	0 '\0'	unsigned char
  [53]	0 '\0'	unsigned char
  [54]	0 '\0'	unsigned char
  [55]	0 '\0'	unsigned char
  [56]	0 '\0'	unsigned char
  [57]	0 '\0'	unsigned char
  [58]	0 '\0'	unsigned char
  [59]	0 '\0'	unsigned char
  [60]	0 '\0'	unsigned char
  [61]	0 '\0'	unsigned char
  [62]	0 '\0'	unsigned char
  [63]	0 '\0'	unsigned char
  [64]	0 '\0'	unsigned char
  [65]	0 '\0'	unsigned char
  [66]	0 '\0'	unsigned char
  [67]	0 '\0'	unsigned char
  [68]	0 '\0'	unsigned char
  [69]	0 '\0'	unsigned char
  [70]	0 '\0'	unsigned char
  [71]	0 '\0'	unsigned char
  [72]	0 '\0'	unsigned char
  [73]	0 '\0'	unsigned char
  [74]	0 '\0'	unsigned char
  [75]	0 '\0'	unsigned char
  [76]	0 '\0'	unsigned char
  [77]	0 '\0'	unsigned char
  [78]	0 '\0'	unsigned char
  [79]	0 '\0'	unsigned char
  [80]	0 '\0'	unsigned char
  [81]	0 '\0'	unsigned char
  [82]	0 '\0'	unsigned char
  [83]	0 '\0'	unsigned char
  [84]	0 '\0'	unsigned char
  [85]	0 '\0'	unsigned char
  [86]	0 '\0'	unsigned char
  [87]	0 '\0'	unsigned char
  [88]	0 '\0'	unsigned char
  [89]	0 '\0'	unsigned char
  [90]	0 '\0'	unsigned char
  [91]	0 '\0'	unsigned char
  [92]	0 '\0'	unsigned char
  [93]	0 '\0'	unsigned char
  [94]	0 '\0'	unsigned char
  [95]	0 '\0'	unsigned char
  [96]	0 '\0'	unsigned char
  [97]	0 '\0'	unsigned char
  [98]	0 '\0'	unsigned char
  [99]	0 '\0'	unsigned char
  [100]	0 '\0'	unsigned char
  [101]	0 '\0'	unsigned char
  [102]	0 '\0'	unsigned char
  [103]	0 '\0'	unsigned char
  [104]	0 '\0'	unsigned char
  [105]	0 '\0'	unsigned char
  [106]	0 '\0'	unsigned char
  [107]	0 '\0'	unsigned char
  [108]	0 '\0'	unsigned char
  [109]	0 '\0'	unsigned char
  [110]	0 '\0'	unsigned char
  [111]	0 '\0'	unsigned char
  [112]	0 '\0'	unsigned char
  [113]	0 '\0'	unsigned char
  [114]	0 '\0'	unsigned char
  [115]	0 '\0'	unsigned char
  [116]	0 '\0'	unsigned char
  [117]	0 '\0'	unsigned char
  [118]	0 '\0'	unsigned char
  [119]	0 '\0'	unsigned char
  [120]	0 '\0'	unsigned char
  [121]	0 '\0'	unsigned char
  [122]	0 '\0'	unsigned char
  [123]	0 '\0'	unsigned char
  [124]	0 '\0'	unsigned char
  [125]	0 '\0'	unsigned char
  [126]	0 '\0'	unsigned char
  [127]	50 '2'	unsigned char
#+end_example

* Breakpoint bug

address_debug_flags=0x0000017971e2d28a
addr_flags=0x0000017971e3bc38



* b2 UEF save state extra stuff

** Memory chunks

May as well reuse the BeebEm memory state and sideways ROM chunks,
though it might be nice to tidy up the shadow RAM while doing it.
Maybe just save all 32 KB of shadow RAM and skip the separate
private/FS RAM chunks?

** 6502 stuff

Cycle count for each 6502 is unnecessary, as there's a global one for
the entire system. Include that as part of some global system state
chunk that also holds machine type.

For saving 6502 state, it must be possible to save it on any cycle
boundary (pretty much) - the entire state will have to be saved. Can't
cheat by trying to put the 6502 to a known point, because it'll only
end up with the same issue as issue #2 for BeebEm compat...

The only complicated bit here is the tfn/ifn pointers, but
=g_named_ifns= and =g_name_tfns= to the rescue (hopefully). I'm not
certain there are no holes in the table, though - could this be
detected statically? Accesses to it are not really
performance-sensitive. (Answer: looks like it'd be possible to do at
least something, but a bit hard to guarantee the tables are set up
properly. Would be easier if it were C++. For now, can advance the
system cycle by cycle until all have known names, and flag any problem
cases.)

** VIA stuff

b2 will need to save more stuff than there's room for in the
BeebEm-format chunk.

** Sound stuff

The BeebEm stuff might be good?

** Video stuff

The 

* b2/BeebEm UEF save state compat stuff

Limitations if saving BeebEm-compatible state:

1. Can't save during 1770 operation, as the b2 internal state doesn't
   map to the BeebEm FDCCommand stuff. Probably no bad thing

2. Can't reliably save with second processor, as it may not be
   possible to advance tho emulation to a point where both CPUs are
   about to fetch an instruction

3. Have to fake the FDC DLL name

4. NMILock ain't a thing so it'll probably have to be saved as 0

5. Might not work anyway...!

Loading BeebEm-compatible states should be easy enough, probably.
Restrictions:

1. Note unsupported hardware (Master ET, 8271, Z80, Music 5000, etc.)

2. Can't load if 1770 active


* BeebEm UEF chunks

Current BeebEm UEF version is major 0, minor 14.

| # (hex) | Func                      | Notes                                      |
|---------+---------------------------+--------------------------------------------|
|    0460 | Save6502UEF               |                                            |
|    0461 | SaveMemUEF                | ROMSEL+ACCCON. 3=IntegraB                  |
|    0462 | SaveMemUEF                | Main memory: 32 KB                         |
|    0463 | SaveMemUEF                | Shadow RAM                                 |
|    0464 | SaveMemUEF                | Private RAM/ANDY                           |
|    0465 | SaveMemUEF                | FS RAM/HAZEL                               |
|    0466 | SaveMemUEF                | Sideways RAM                               |
|    0467 | SaveVIAUEF                | Saved twice. Flag in chunk indicates which |
|    0468 | SaveVideoUEF              |                                            |
|    046a | BeebWin::SaveEmuUEF       |                                            |
|    046b | SaveSoundUEF              |                                            |
|    046c | BeebWin::SaveBeebEmID     |                                            |
|    046e | Save8271UEF               | *Not yet supported*                        |
|    046f | Save1770UEF               | *Going to be painful*                      |
|    0470 | SaveTubeUEF               |                                            |
|    0471 | Save65C02UEF              |                                            |
|    0472 | Save65C02MemUEF           |                                            |
|    0473 | SaveSerialUEF             | *Not yet supported*                        |
|    0474 | SaveMusic5000UEF          | *Out of scope*                             |
|    0475 | SaveMemUEF                | ROM bank                                   |
|    0478 | SaveZ80UEF                | *Out of scope*                             |
|    0479 | CArm::SaveState           | *Out of scope*                             |
|    047C | SaveMemUEF                | PAL ROM bank                               |
|    047a | SprowCoPro::SaveState     | *Out of scope*                             |
|    047b | Master512CoPro::SaveState | *Out of scope*                             |

** 0460 6502 State

| Size | What        | Notes |
|------+-------------+-------|
|    2 | PC          |       |
|    1 | A           |       |
|    1 | X           |       |
|    1 | Y           |       |
|    1 | S           |       |
|    1 | P           |       |
|    4 | TotalCycles |       |
|    1 | intStatus   |       |
|    1 | NMIStatus   |       |
|    0 | NMILock     |       |
|    2 | 0           | ?     |

- ~intStatus~ is a bitfield. (See ~IRQ_Nums~ (6502core.h) for the bit
  indexes.) If any are set, initiate IRQ
- ~NMIStatus~ is a bitfield. (See ~NMI_Nums" (6502core.h) for the bit
  indexes.)
- ~NMILock~ is there to handle the edge-triggering. It's set if an NMI
  is initiated, then reset once the RTI occurs

** 0461 Memory Control State

*** Integra B

| Size | What                   |
|------+------------------------|
|    1 | ROMSEL+MemSel+PrvEn    |
|    1 | ShEn+Prvs8+Prvs4+Prvs1 |
|    1 | HiAdd                  |

*** B+

| Size | What          |
|------+---------------|
|    1 | ROMSEL+MemSel |
|    1 | Sh_Display    |

*** Master

| Size | What   |
|------+--------|
|    1 | ROMSEL |
|    1 | ACCCON |

** 0462 Main RAM

|  Size | What     |
|-------+----------|
| 32768 | Main RAM |

** 0463 Shadow RAM

*** Integra B

|  Size | What                |
|-------+---------------------|
| 20480 | shadow RAM contents |

*** B+

|  Size | What                |
|-------+---------------------|
| 32768 | shadow RAM contents |

In this mode, shadow RAM contents below $3000 are ignored.

*** Master

|  Size | What                | Notes |
|-------+---------------------+-------|
|     2 | 0                   | Why?  |
| 32768 | shadow RAM contents |       |

In this mode, shadow RAM contents below $3000 are ignored.

** 0464 Private RAM

*** Integra B

|  Size | What        |
|-------+-------------|
| 12288 | private RAM |

*** B+

|  Size | What        | Notes |
|-------+-------------+-------|
| 12288 | private RAM | ANDY  |

There is no overlap with the contents of chunk 0463; the corresponding
region of chunk 0463 is simply ignored.

*** Master

| Size | What        | Notes |
|------+-------------+-------|
| 4096 | private RAM | ANDY  |

There is no overlap with the contents of chunk 0463; the corresponding
region of chunk 0463 is simply ignored.

** 0465 Filing System RAM

*** Master

| Size | What   | Notes |
|------+--------+-------|
| 8192 | FS RAM | HAZEL |

There is no overlap with the contents of chunk 0463; the corresponding
region of chunk 0463 is simply ignored.

** 0466 Sideways RAM

|  Size | What          |
|-------+---------------|
| 16384 | Bank contents |
|     1 | Bank index    |

** 0467 VIA

| Size | What      | Notes                                   |
|------+-----------+-----------------------------------------|
|    1 | ident     | 0=System VIA, 1=User VIA                |
|    1 | ORB       |                                         |
|    1 | IRB       |                                         |
|    1 | ORA       |                                         |
|    1 | IRB       |                                         |
|    1 | DDRB      |                                         |
|    1 | DDRA      |                                         |
|    2 | T1C       | 2 MHz value/2                           |
|    2 | T1L       |                                         |
|    2 | T2C       | 2 MHz value/2                           |
|    2 | T1L       |                                         |
|    1 | ACR       |                                         |
|    1 | PCR       |                                         |
|    1 | IFR       |                                         |
|    1 | IER       |                                         |
|    1 | t1hasshot |                                         |
|    1 | t2hasshot |                                         |
|    1 | extra     | IC32 state if System VIA; 0 if User VIA |
|      |           |                                         |

** 0468 Video

| Size | What                               | Notes                          | Ver  |
|------+------------------------------------+--------------------------------+------|
|    1 | H Total                            |                                |      |
|    1 | H Displayed                        |                                |      |
|    1 | H Sync Pos                         |                                |      |
|    1 | Sync Width                         |                                |      |
|    1 | V Total                            |                                |      |
|    1 | V Total Adjust                     |                                |      |
|    1 | V Displayed                        |                                |      |
|    1 | V Sync Pos                         |                                |      |
|    1 | Interlace & Delay                  |                                |      |
|    1 | Scan Lines/Char                    |                                |      |
|    1 | Cursor Start                       |                                |      |
|    1 | Cursor End                         |                                |      |
|    1 | Screen Start MSB                   |                                |      |
|    1 | Screen Start LSB                   |                                |      |
|    1 | Cursor MSB                         |                                |      |
|    1 | Cursor LSB                         |                                |      |
|    1 | Light Pen MSB                      |                                |      |
|    1 | Light Pen LSB                      |                                |      |
|    1 | ULA Control Register               |                                |      |
|   16 | Palette                            | Actual colour values are saved |      |
|    2 | ActualScreenWidth                  |                                |      |
|    4 | ScreenAdjust                       |                                |      |
|    1 | CRTC Control Reg                   |                                |      |
|    1 | Teletext Style                     | 1 or 2                         |      |
|    4 | VideoState Addr                    |                                | >=13 |
|    4 | VideoState StartAddr               |                                | >=13 |
|    4 | VideoState PixmapLine              |                                | >=13 |
|    4 | VideoState PreviousFirstPixmapLine |                                | >=13 |
|    4 | VideoState CharLine                |                                | >=13 |
|    4 | VideoState InCharLineUp            |                                | >=13 |
|    4 | VideoState VSyncState              |                                | >=13 |
|    1 | VideoState IsNewTVFrame            |                                | >=13 |
|    1 | VideoState InterlaceFrame          |                                | >=13 |
|    1 | VideoState DoCA1Int                |                                | >=13 |
|    4 | ova                                |                                | >=13 |
|    4 | ovn                                |                                | >=13 |
|    4 | CursorFieldCount                   |                                | >=13 |
|    1 | CursorOnState                      |                                | >=13 |
|    4 | CurY                               |                                | >=13 |
|    4 | Mode7FlashTrigger                  |                                | >=13 |
|    1 | Mode7lashOn                        |                                | >=13 |
|    4 | VideoTriggerCount-TotalCycles      |                                | >=13 |

** 046A Emulator Specifics

|   Size | What         | Notes                                                                       | Min Ver |
|--------+--------------+-----------------------------------------------------------------------------+---------|
|      1 | Machine Type | 0=B; 1=B+Integra B; 2=B+; 3=M128; 4=ET                                      |         |
|      1 | Native FDC   | set if 8271 rather than FDC DLL??                                           |         |
|      1 | Tube Type    | 0=None; 1=65c02; 2=M512; 3=Acorn Z80; 4=Torch Z80; 5=Acorn ARM; 6=Sprow ARM |         |
|      2 | Key Mapping  | Key mapping type                                                            | >=11    |
|    256 | Key Map Path |                                                                             | <14     |
| String | Key Map Path |                                                                             | >=14    |
|      1 | 0            |                                                                             |         |

Key mapping types are:

- IDM_USERKYBDMAPPING :: 40060
- IDM_DEFAULTKYBDMAPPING :: 40034
- IDM_LOGICALKYBDMAPPING :: 40035

The Key Map Path is set if Key Mapping is IDM_USERKYBDMAPPING.

** 046B Sound

| Size | What                  | Notes                          |
|------+-----------------------+--------------------------------|
|    2 | Tone 2 Freq           |                                |
|    2 | Tone 1 Freq           |                                |
|    2 | Tone 0 Freq           |                                |
|    1 | Channel 3 Attenuation |                                |
|    1 | Channel 2 Attenuation |                                |
|    1 | Channel 1 Attenuation |                                |
|    1 | Noise register value  |                                |
|    1 | Channel 0 Attenuation |                                |
|    1 | Last channel set      | Used for handling the 2nd byte |
|    2 | GenIndex[0]           |                                |
|    2 | GenIndex[1]           |                                |
|    2 | GenIndex[2]           |                                |
|    2 | GenIndex[3]           |                                |

~GenIndex~ entries increment once per update and are used to decide
when to flip the polarity of the output.

** 046C BeebEm Id

Used to indicate this is a BeebEm save state UEF file.

| Size | What          |
|------+---------------|
|    6 | "BeebEm"      |
|    8 | 0 bytes       |
|    1 | Major version |
|    1 | Minor version |

Versions come from https://github.com/stardot/beebem-windows/blob/master/Src/Version.h

** 046E 8271

(Not relevant for b2)

** 046F 1770

|     Size | What          | Notes                                            |
|----------+---------------+--------------------------------------------------|
|      2*1 | Drive Type    | 0=SSD 1=DSD 2=ADFS 3=IMG 4=DOS 5=FSD             |
| 2*string | Drive File    |                                                  |
|        1 | Status        | status register                                  |
|        1 | Data          | data register                                    |
|        1 | Track         | actual track head is on??                        |
|        1 | ATrack        | value returned when track register read          |
|        1 | Sector        | sector register                                  |
|        1 | HeadDir       | step direction - true: track+=1, false: track-=1 |
|        1 | FDCCommand    | see below...                                     |
|        1 | LoadingCycles | spinup counter                                   |
|      2*4 | SpinDown      |                                                  |
|        1 | UpdateTrack   |                                                  |
|        1 | MultiSect     |                                                  |
|        1 | StepRate      |                                                  |
|        1 | SpinUp        |                                                  |
|        1 | Verify        |                                                  |
|      2*1 | LightsOn      |                                                  |
|        4 | ByteCount     |                                                  |
|        4 | 0             | unused                                           |
|        1 | ExtControl    |                                                  |
|        1 | CurrentDrive  |                                                  |
|      2*4 | HeadPos       | offset in current disk file                      |
|      2*1 | CurrentHead   |                                                  |
|      2*4 | DiscStep      |                                                  |
|      2*4 | DiscStrt      |                                                  |
|      2*1 | MaxSects      |                                                  |
|      2*4 | DefStart      |                                                  |
|      2*4 | Trklen        |                                                  |
|      2*1 | DWriteable    |                                                  |
|      2*1 | DiskDensity   |                                                  |
|        1 | RotSect       |                                                  |
|   string | FDCDLL        |                                                  |

=FDCCommand= is the state in BeebEm's internal 1770 state machine,
which is probably going to be a bit painful to map to anything in b2
(or vice versa). So perhaps it'll be safest just to insist on the 1770
being idle when saving or loading a BeebEm-compatible state. I think
an FDCCommand of 0 indicatse that the 1770 is waiting for a command.

FDCDLL probably easiest handled by checking the file name part, which
needs to be one of:

- `Acorn1770.dll` :: Acorn 1770
- `OpusDDOS.dll` :: Opus 1770
- `Watford.dll` :: Watford DDB2

** 0470 Tube ULA State

| Size | What          | Notes                                                          |
|------+---------------+----------------------------------------------------------------|
|    1 | R1 Status     | Holds the PVMKIQ bits                                          |
|   24 | R1 P->H Data  |                                                                |
|    1 | R1 P->H Index |                                                                |
|    1 | R1 H Status   | Holds the full/available bits (same applies to all H/P status) |
|    1 | R1 H->P Data  |                                                                |
|    1 | R1 P Status   |                                                                |
|    1 | R2 P->H Data  |                                                                |
|    1 | R2 H Status   |                                                                |
|    1 | R2 H->P Data  |                                                                |
|    1 | R2 P Status   |                                                                |
|    2 | R3 P->H Data  |                                                                |
|    1 | R3 P->H Index |                                                                |
|    1 | R3 H Status   |                                                                |
|    2 | R3 H->P Data  |                                                                |
|    1 | R3 H->P Index |                                                                |
|    1 | R3 P Status   |                                                                |
|    1 | R4 P->H Data  |                                                                |
|    1 | R4 H Status   |                                                                |
|    1 | R4 H->P Data  |                                                                |
|    1 | R4 P Status   |                                                                |

** 0471 65c02 Second Processor State

| Size | What            | Notes |
|------+-----------------+-------|
|    2 | PC              |       |
|    1 | A               |       |
|    1 | X               |       |
|    1 | Y               |       |
|    1 | S               |       |
|    1 | P               |       |
|    4 | TotalTubeCycles |       |
|    1 | TubeintStatus   |       |
|    1 | TubeNMIStatus   |       |
|    1 | TubeNMILock     |       |
|    2 | 0               | ?     |

Boot mode is not handled. BeebEm copies the second processor ROM into
memory before starting execution.

** 0472 65c02 Second Processor Memory

|  Size | What | Notes |
|-------+------+-------|
| 65536 | RAM  |       |

** 0475 Sideways ROM

|  Size | What          | Notes              |
|-------+---------------+--------------------|
|     1 | Bank index    |                    |
|     1 | 0             | indicates ROM bank |
| 16384 | Bank contents |                    |

* bp cycle counts

-		hits	0x0000016d73723638 {hit_recent={n=42490100 } hit_prev={n=42489926 } }	BBCMicro::DebugState::BreakpointHits *
+		hit_recent	{n=42490100 }	CycleCount
+		hit_prev	{n=42489926 }	CycleCount

* PAL ROM mappers

MAME link: https://github.com/mamedev/mame/blob/master/src/devices/bus/bbc/rom/pal.cpp

MAME BBC roms.xml: https://github.com/mamedev/mame/blob/master/hash/bbc_rom.xml

Large ROMs thread: https://stardot.org.uk/forums/viewtopic.php?t=14384

IntegraB V2: https://stardot.org.uk/forums/viewtopic.php?t=19392

** Interword

- Mask :: 3fe0
- Offset 0060, 3fc0 :: bank = 0
- Offset 0040, 3fa0, 3fe0 :: bank = 1

| What        | f | e | d | c | b | a | 9 | 8 | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
|-------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---|
| Mask 3fe0   |   |   | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |   |   |   |   |   |
| Offset 0060 |   |   |   |   |   |   |   |   |   | 1 | 1 |   |   |   |   |   |
| Offset 3fc0 |   |   | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |   |   |   |   |   |   |
| Offset 0040 |   |   |   |   |   |   |   |   |   | 1 |   |   |   |   |   |   |
| Offset 3fa0 |   |   | 1 | 1 | 1 | 1 | 1 | 1 | 1 |   | 1 |   |   |   |   |   |
| Offset 3fe0 |   |   | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |   |   |   |   |   |

9 bits, 512 bytes

** Increase big pages to 128 KB's-worth per bank?

But the Watford ones have a fixed 8 KB at the bottom. So now the big
page addresses are no longer fixed.

# There would then be 32 big pages per bank, laid out as follows.

# | MBank | Big page | Address |
# |-------+----------+---------|
# | w     |       +0 | 8000    |
# | w     |       +1 | 9000    |
# | w     |       +2 | a000    |
# | w     |       +3 | b000    |
# | x     |       +4 | 8000    |
# | x     |       +5 | 9000    |
# | x     |       +6 | a000    |
# | x     |       +7 | b000    |
# | y     |       +8 | 8000    |
# | y     |       +9 | 9000    |
# | y     |      +10 | a000    |
# | y     |      +11 | b000    |
# | z     |      +12 | 8000    |
# | z     |      +13 | 9000    |
# | z     |      +14 | a000    |
# | z     |      +15 | b000    |
# | W     |      +16 | 8000    |
# | W     |      +17 | 9000    |
# | W     |      +18 | a000    |
# | W     |      +19 | b000    |
# | X     |      +20 | 8000    |
# | X     |      +21 | 9000    |
# | X     |      +22 | a000    |
# | X     |      +23 | b000    |
# | Y     |      +24 | 8000    |
# | Y     |      +25 | 9000    |
# | Y     |      +26 | a000    |
# | Y     |      +27 | b000    |
# | Z     |      +28 | 8000    |
# | Z     |      +29 | 9000    |
# | Z     |      +30 | a000    |
# | Z     |      +31 | b000    |

# Then for the various mapper types (names as per MAME):

# | Name     | w | x | y | z | W | X | Y | Z |
# |----------+---+---+---+---+---+---+---+---|
# | CCIWORD  | 1 | 1 |   |   |   |   |   |   |
# | CCIBASE  | 1 | 1 | 1 | 1 |   |   |   |   |
# | CCISPELL | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 |
# | PALQST   | 1 | 1 | 1 | 1 |   |   | 1 | 1 |

** Dynamic big pages

Base requirements:

- 32 KB RAM (B/B+/Master)
- 12 KB ANDY (B+)
- 4 KB ANDY (Master)
- 8 KB HAZEL (Master)
- 20 KB Shadow RAM (Master)
- <N> KB paged ROMs
- 16 KB MOS
- 64 KB parasite
- 2 KB parasite ROM

*** B

8 main RAM
4 OS ROM
...plus ROMs

*** B+

8 main RAM
3 ANDY
5 shadow RAM
4 OS ROM
...plus ROMs

*** Master/Compact

8 main RAM
1 ANDY
2 HAZEL
5 shadow RAM
4 OS ROM
...plus ROMs

*** 2nd processor

16 RAM
1 ROM

*** Other notes

=PARASITE_BIG_PAGE_INDEX= is used in update function to check for
breakpoints.

=MOS_BIG_PAGE_INDEX= is used in debugger code when showing the paging
setup.

** Status <2024-07-05 Fri>

Big page tables should be set up correctly. Regardless of mapper type,
the big page index is bank*32+region*4+bigpage.

ReadOnlyBigPage structs should be set up correctly. There's a new
function, =GetROMOffset=, that handles the details.

Mapper port access should work... maybe... there's a new =if
constexpr= inside =BBCMicro::Update=. This calls =UpdatePaging= to
sort out a new big page arrangement. No need to worry about switching
update function: that's impossible in this case. Access to mapper IO
can only change the paging. Code needs to access ROMSEL to switch to a
different update function due to switching to a different mapper, and
that's now handled with an additional =UpdateCPUDataBusFn= call in
=BBCMicro::WriteROMSEL=.

=UpdateCPUDataBusFn= has been updated to take the mapper type into
account.

TODOs

*** DONE don't allow writeable slot unless 16 KB
CLOSED: [2024-07-06 Sat 21:55]

etc., etc. - make sure the UI makes this clear

*** DONE NUM_BIG_PAGES is now a LOT
CLOSED: [2024-07-06 Sat 21:54]

Go through anywhere it's used to size arrays, and eliminate anything
that's now far too large.

Conclusion: probably going to leave this. Major offenders are:

- BBCMicro :: not a big deal, as there's only one of these per running
  emulator

- BBCMicro::DebugState :: this is now a slightly monstrous 2 MBytes
  plus, but, ditto. 

- BreakpointsDebugWindow :: another singleton

4 MBytes just ain't that much these days...

*** DONE NUM_UPDATE_MFNS is now a LOT
CLOSED: [2024-07-06 Sat 21:54]

Ditto.

Conclusion: ditto, but the sizeof BBCMicro::UpdateMFnsData is realy a
bit ridiculous!

Use a std::map or similar for this instead? It would only need
re-examining when the update mfn actually changes.

Or what about a remap table, so only the unique functions need to be
counted. This could be built up at runtime by scanning the update_mfns
table.

*** DONE Use GetROMBankCode where appropriate
CLOSED: [2024-07-06 Sat 21:56]

Remove all the occurrences of "%x" for this purpose.

* NUM_UPDATE_MFNS reduction (from 65536)

Current update flags, set a:

| Field                | # options |
|----------------------+-----------|
| IsMaster128          |         2 |
| HasBeebLink          |         2 |
| Hacks                |         2 |
| Debug                |         2 |
| Trace                |         2 |
| Parasite             |         2 |
| ParasiteSpecial      |         2 |
| DebugStepParasite    |         2 |
| DebugStepHost        |         2 |
| Parasite3MHzExternal |         2 |
| ParallelPrinter      |         2 |
| IsMasterCompact      |         2 |
| ROMType              |        16 |

#+begin_src lisp-interaction
  ;; a
  (* 2 2 2 2 2 2 2 2 2 2 2 2 16)
  65536

  ;; b
  (* 3 2 2 2 2 3 2 2 2 2 8)		
  18432

  ;; c
  (* 3 2 2 2 2 5 2 2 2 8)
  15360
#+end_src

But the actual set of options is more like this (set b):

| Field             | # options | Notes                |
|-------------------+-----------+----------------------|
| Type              |         3 | B/B+; M128; MCompact |
| BeebLink          |         2 |                      |
| Hacks             |         2 |                      |
| Debug             |         2 |                      |
| Trace             |         2 |                      |
| ParasiteType      |         3 | None; 3 MHz; 4 MHz   |
| ParasiteSpecial   |         2 |                      |
| DebugStepParasite |         2 |                      |
| DebugStepHost     |         2 |                      |
| ParallelPrinter   |         2 |                      |
| ROMType           |         8 |                      |

Other possibilities: merge parasite special into parasite type. 5. Set
c.

But, ultimately, this is only reducing the size of the tables. The
number of actual routines will necessarily remain the same. So does it
actually matter?

A 512 KB table (that's 90% unused) is kind of dumb, but for a modern
PC it's basically irrelevant.

* Mouse notes

~300 IRQs/sec for my Quest Mouse.

* Submodule upstreams

Origin is upstream already:

| Submodule            | Upstream                                        |
|----------------------+-------------------------------------------------+
| 6502Timing           | https://github.com/dp111/6502Timing             |
| Font-Awesome         | https://github.com/FortAwesome/Font-Awesome     |
| IconFontCppHeaders   | https://github.com/juliettef/IconFontCppHeaders |
| SDL_GameControllerDB | https://github.com/gabomdq/SDL_GameControllerDB |
| miniz                | https://github.com/richgel999/miniz             |
| rcedit               | https://github.com/electron/rcedit              |
| sanitizers-cmake     | https://github.com/arsenm/sanitizers-cmake      |
| stb                  | https://github.com/nothings/stb                 |
| 6502-tests           | https://github.com/tom-seddon/6502-tests        |
| beeb                 | https://github.com/tom-seddon/beeb              |
| shellcmd.py          | https://github.com/tom-seddon/shellcmd.py       |
|                      |                                                 |

Origin is my fork and upstream is elsewhere:

| submodule       | Upstream                                   | Origin                                        |
|-----------------+--------------------------------------------+-----------------------------------------------|
| Remotery        | https://github.com/Celtoys/Remotery        | https://github.com/tom-seddon/Remotery        |
| SDL_official    | https://github.com/libsdl-org/SDL          | https://github.com/tom-seddon/SDL-1           |
| curl            | https://github.com/curl/curl               | https://github.com/tom-seddon/curl            |
| http-parser     | https://github.com/nodejs/http-parser      | https://github.com/tom-seddon/http-parser     |
| imgui           | https://github.com/ocornut/imgui           | https://github.com/tom-seddon/imgui           |
| imgui_club      | https://github.com/tom-seddon/imgui_club   | https://github.com/tom-seddon/imgui_club      |
| libuv           | https://github.com/libuv/libuv             | https://github.com/tom-seddon/libuv           |
| macdylibbundler | https://github.com/auriamg/macdylibbundler | https://github.com/tom-seddon/macdylibbundler |
| perfect6502     | https://github.com/mist64/perfect6502      | https://github.com/tom-seddon/perfect6502     |
| rapidjson       | https://github.com/Tencent/rapidjson       | https://github.com/tom-seddon/rapidjson       |
| relacy          | https://github.com/dvyukov/relacy          | https://github.com/tom-seddon/relacy          |
| salieri         | https://github.com/nemequ/salieri          | https://github.com/tom-seddon/salieri         |
| visual6502      | https://github.com/trebonian/visual6502    | https://github.com/tom-seddon/visual6502      |

Upstream updates no longer relevant, as HEAD doesn't use this library
any more:

| Submodule | Origin                            |
|-----------+-----------------------------------|
| SDL       | https://github.com/tom-seddon/SDL |
| noc       | https://github.com/tom-seddon/noc |

* BBCMicro_Update.cpp build times
** VS2019

Modify =BBCMicro_Update= file, do =Project Only= > =Build= on beeb_lib
project.

Original: 3 runs: 1'09", 1'09", 1'08"

Split manually into 2 groups: 0'45", 0'44", 0'44"

Add configurable =BBCMICRO_NUM_UPDATE_GROUPS=:

- 1 group: 1'09"
- 2 groups: 0'47"
- 4 groups: 0'38", 0'38", 0'37"

i7-4890HQ (4C 8T)

** gcc

Modify =BBCMicro_Update= file, and do =time ninja
./src/beeb/libbeeb_lib.a= from the build folder.

- 1 group: 649.84s user 17.65s system 100% cpu 11:03.00 total
- 2 groups: 725.01s user 17.84s system 195% cpu 6:20.81 total
- 4 groups: 808.46s user 21.31s system 282% cpu 4:53.27 total

VirtualBox, 3 cores

** Xcode

Modify =BBCMicro_Update= file, select =beeb_lib= as the target in
Xcode, build from Xcode.

- 1 group: 139.4 sec
- 2 groups: 86.8 sec
- 4 groups: 80.1 sec

i7-5557U (2C 4T)

* More build times

** Initial

| Scenario                | Debug        | Release      |
|-------------------------+--------------+--------------|
| Rebuild all             | 2 min 51 sec | 5 min 37 sec |
| Touch BBCMicro.h, build | 1 min 11 sec |              |

** Include less stuff in test_standard.cpp

| Scenario                | Debug        | Release      |
|-------------------------+--------------+--------------|
| Rebuild all             | 2 min 35 sec | 5 min 35 sec |
| Touch BBCMicro.h, build | 1 min 5 sec  |              |

** Tidy up shared headers a bit

Rebuild all

debug: 2 min 29 sec

Release: 5 min 30 sec

* eof.
